---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Main from "@layouts/Main.astro";
import Footer from "@components/Footer.astro";
import CardGrid from "@components/CardGrid.astro";
import {
  formatter,
  getEventDetails,
  getLists,
  getUniqueNeighborhoods,
} from "@utils/collections";
import type { FoodItem } from "types";
import food from "@content/food/food.json";

const { foodType, year } = Astro.params;

const validFoodTypes = ["burger", "nacho", "pizza", "sandwich", "wing"];
if (!validFoodTypes.includes(foodType!)) {
  return Astro.redirect("/404");
}

const items = food.filter(
  item => item.year === year && item.type === foodType
) as unknown as FoodItem[];
const neighborhoods = items ? getUniqueNeighborhoods(items) : [];
const lists = await getLists(Astro.locals?.user?.id);
const eventDetails = await getEventDetails(
  year!,
  foodType! as FoodItem["type"]
);

const dateRange = eventDetails
  ? `${formatter.format(new Date(eventDetails.dateStart))} - ${formatter.format(new Date(eventDetails.dateEnd))} ${eventDetails.year}`
  : undefined;

const foodTypeCapitalized =
  foodType!.charAt(0).toUpperCase() + foodType!.slice(1);
const foodTypePlural =
  foodType === "sandwich" ? "Sandwiches" : `${foodTypeCapitalized}s`;
---

<Layout
  title={`PDX ${foodTypePlural} Week ${year}`}
  description={`A fan site celebrating PDX ${foodTypePlural} Week`}
>
  <Header />
  <Main
    pageTitle={`${foodTypePlural} ${year}`}
    neighborhoods={neighborhoods}
    pageDesc={dateRange}
  >
    {items && <CardGrid items={items} lists={lists} />}
  </Main>
  <Footer />
</Layout>
