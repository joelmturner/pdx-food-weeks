---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Main from "@layouts/Main.astro";
import Footer from "@components/Footer.astro";
import CardGrid from "@components/CardGrid.astro";
import {
  formatter,
  getEventDetails,
  getLists,
  getUniqueNeighborhoods,
} from "@utils/collections";
import type { FoodItem } from "types";
import food from "@content/food/food.json";

const { foodType, year } = Astro.params;

const validFoodTypes = ["burger", "nacho", "pizza", "sandwich", "wing"];
if (!validFoodTypes.includes(foodType!)) {
  return Astro.redirect("/404");
}

const items = food.filter(
  item => item.year === year && item.type === foodType
) as unknown as FoodItem[];
const neighborhoods = items ? getUniqueNeighborhoods(items) : [];
const lists = await getLists(Astro.locals?.user?.id);
const eventDetails = await getEventDetails(
  year!,
  foodType! as FoodItem["type"]
);

const dateRange = eventDetails
  ? `${formatter.format(new Date(eventDetails.dateStart))} - ${formatter.format(new Date(eventDetails.dateEnd))} ${eventDetails.year}`
  : undefined;

const foodTypeCapitalized =
  foodType!.charAt(0).toUpperCase() + foodType!.slice(1);
const foodTypePlural =
  foodType === "sandwich" ? "Sandwich" : `${foodTypeCapitalized}s`;

// SEO optimized content
const pageTitle = `Portland ${foodTypeCapitalized} Week ${year} - PDX Food Weeks`;
const description = `Explore Portland ${foodTypeCapitalized} Week ${year}! ${items.length} unique ${foodTypePlural.toLowerCase()} across ${neighborhoods.length} Portland neighborhoods. ${dateRange ? `Running ${dateRange}` : ""}`;
const schema = {
  "@context": "https://schema.org",
  "@type": "Event",
  name: `Portland ${foodTypeCapitalized} Week ${year}`,
  description: description,
  ...(eventDetails && {
    startDate: eventDetails.dateStart,
    endDate: eventDetails.dateEnd,
  }),
  location: {
    "@type": "City",
    name: "Portland",
    address: {
      "@type": "PostalAddress",
      addressLocality: "Portland",
      addressRegion: "OR",
      addressCountry: "US",
    },
  },
};
---

<Layout
  title={pageTitle}
  description={description}
  ogImage={eventDetails?.ogImage}
>
  <script
    is:inline
    type="application/ld+json"
    set:html={JSON.stringify(schema)}
  />
  <Header />
  <Main
    pageTitle={`${foodTypePlural} ${year}`}
    neighborhoods={neighborhoods}
    pageDesc={dateRange}
  >
    <h2 class="sr-only">Available {foodTypePlural} for {year}</h2>
    {items && <CardGrid items={items} lists={lists} />}
  </Main>
  <Footer />
</Layout>
